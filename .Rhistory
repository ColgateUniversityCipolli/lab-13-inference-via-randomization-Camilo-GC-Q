further = finch_data$further
n = length(further)
t_vals = seq(-10, 10, by = 0.1)
error_vals = (as.numeric(cumskew(further)) / sqrt(n)) * ((2*t_vals^2 + 1) / 6) * dnorm(t_vals)
error_vals
library(ggplot2)
ggplot(df, aes(x = t, y = error)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t_value",
y = "Approximation Error") +
theme_minimal()
library(ggplot2)
finch_data = read_csv("zebrafinches.csv")
further = finch_data$further
n = length(further)
t_vals = seq(-10, 10, by = 0.1)
error_vals = (as.numeric(cumskew(further)) / sqrt(n)) * ((2*t_vals^2 + 1) / 6) * dnorm(t_vals)
error_vals
df = data.frame(t_vals, error_vals)
ggplot(df, aes(x = t, y = error)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t_value",
y = "Approximation Error") +
theme_minimal()
installed.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
finch_data = read_csv("zebrafinches.csv")
further = finch_data$further
n = length(further)
t_vals = seq(-10, 10, by = 0.1)
error_vals = (as.numeric(cumskew(further)) / sqrt(n)) * ((2*t_vals^2 + 1) / 6) * dnorm(t_vals)
error_vals
df = data.frame(t_vals, error_vals)
ggplot(df, aes(x = t, y = error)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t_value",
y = "Approximation Error") +
theme_minimal()
error_vals
df = data.frame(t_vals, error_vals)
ggplot(df, aes(x = t_vals, y = error_vals)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t_value",
y = "Approximation Error") +
theme_minimal()
t_vals = seq(-10, 10, by = 0.5)
error_vals = (as.numeric(cumskew(further)) / sqrt(n)) * ((2*t_vals^2 + 1) / 6) * dnorm(t_vals)
error_vals
df = data.frame(t_vals, error_vals)
ggplot(df, aes(x = t_vals, y = error_vals)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t value",
y = "Approximation Error") +
theme_minimal()
ggplot(df, aes(x = t_vals, y = error_vals)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t value",
y = "Approximation Error") +
theme_minimal()
t_vals = seq(-10, 10, by = 1)
error_vals = (as.numeric(cumskew(further)) / sqrt(n)) * ((2*t_vals^2 + 1) / 6) * dnorm(t_vals)
error_vals
df = data.frame(t_vals, error_vals)
ggplot(df, aes(x = t_vals, y = error_vals)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t value",
y = "Approximation Error") +
theme_minimal()
library(cumstats)
library(ggplot2)
finch_data = read_csv("zebrafinches.csv")
further = finch_data$further
n = length(further)
t_vals = seq(-10, 10, by = 1)
error_vals = (as.numeric(cumskew(further)) / sqrt(n)) * ((2*t_vals^2 + 1) / 6) * dnorm(t_vals)
error_vals
df = data.frame(t_vals, error_vals)
ggplot(df, aes(x = t_vals, y = error_vals)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t value",
y = "Approximation Error") +
theme_minimal()
source("C:/Users/cagra/Downloads/rcode-lecture14.R")
ggplot(df, aes(x = t_vals, y = error_vals)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t value",
y = "Approximation Error") +
theme_minimal()
library(cumstats)
library(ggplot2)
finch_data = read_csv("zebrafinches.csv")
further = finch_data$further
n = length(further)
t_vals = seq(-10, 10, by = 1)
error_vals = (as.numeric(cumskew(further)) / sqrt(n)) * ((2*t_vals^2 + 1) / 6) * dnorm(t_vals)
error_vals
df = data.frame(t_vals, error_vals)
df = df
ggplot(df, aes(x = t_vals, y = error_vals)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t value",
y = "Approximation Error") +
theme_minimal()
df = df |>
mutate(
na.omit(df)
)
ggplot(df, aes(x = t_vals, y = error_vals)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t value",
y = "Approximation Error") +
theme_minimal()
View(finch_data)
error_vals
library(e1071)
install.packages('e1071')
library(e1071)
error_vals = (skewness(further) / sqrt(n)) * ((2*t_vals^2 + 1) / 6) * dnorm(t_vals)
error_vals
df = data.frame(t_vals, error_vals)
df = df |>
mutate(
na.omit()
)
ggplot(df, aes(x = t_vals, y = error_vals)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t value",
y = "Approximation Error") +
theme_minimal()
df = data.frame(t_vals, error_vals)
ggplot(df, aes(x = t_vals, y = error_vals)) +
geom_line(color = "blue") +
labs(title = "Approximation Error vs. t",
x = "t value",
y = "Approximation Error") +
theme_minimal()
library(cumstats)
library(ggplot2)
library(e1071)
n = ((skewness(further)/6*0.1*0.05) * (2*t^2 + 1) * dnorm(t))^2
n
n = ((skewness(further)/(6*0.1*0.05)) * (2*t^2 + 1) * dnorm(t))^2
n
skewness(further)
skewness(further)
t
n = ((skewness(further)/(6*0.1*0.05)) * (2*t^2 + 1) * dnorm(t[0]))^2
n
))^2
n = ((skewness(further)/(6*0.1*0.05)) * (2*t^2 + 1) * dnorm(t))^2
n
t
qt(alpha, df = n - 1)
t
n
finch_data = read_csv("zebrafinches.csv")
# View(finch_data)
further = finch_data$further
n = length(further)
t = mean(further) / (sd(further)/sqrt(n))
skewness(further)
alpha = 0.05
n = ((skewness(further)/(6*0.1*0.05)) * (2*t^2 + 1) * qt(alpha, df = n - 1))^2
n
dnorm(t)
error
error
library(e1071)
finch_data = read_csv("zebrafinches.csv")
# View(finch_data)
further = finch_data$further
n = length(further)
t = mean(further) / (sd(further)/sqrt(n))
error = (skewness(further) / sqrt(n)) * ((2*t^2 + 1) / 6) * dnorm(t)
error
t_boot = resamples/ (sd(further)/sqrt(n))
resamples = replicate(N, mean(sample(further - mean(further), replace = T)))
t_boot = resamples/ (sd(further)/sqrt(n))
finch_data = read_csv("zebrafinches.csv")
further = finch_data$further
n = length(further)
N = 10000
resamples = replicate(N, mean(sample(further - mean(further), replace = T)))
t_boot = resamples/ (sd(further)/sqrt(n))
library(e1071)
finch_data = read_csv("zebrafinches.csv")
further = finch_data$further
n = length(further)
N = 10000
resamples = replicate(N, mean(sample(further - mean(further), replace = T)))
t_boot = resamples/ (sd(further)/sqrt(n))
t_boot
n
finch_data = read_csv("zebrafinches.csv")
# View(finch_data)
further = finch_data$further
n = length(further)
t = mean(further) / (sd(further)/sqrt(n))
skewness(further)
alpha = 0.05
n = ((skewness(further)/(6*0.1*0.05)) * (2*t^2 + 1) * qt(alpha, df = n - 1))^2
n
n = ((skewness(further)/(6*0.1*0.05)) * (2*t^2 + 1) * qnorm(alpha))^2
n
# View(finch_data)
further = finch_data$further
n = length(further)
t = qnorm(alpha)
skewness(further)
alpha = 0.05
n = ((skewness(further)/(6*0.1*0.05)) * (2*t^2 + 1) * dnorm(t))^2
n
t = qnorm(alpha)
t
set.seed(123)
B = 10000
x = zebra_data$further  # adjust to your actual variable
n = length(x)
x_mean = mean(x)
x_sd = sd(x)
resamples = replicate(B, mean(sample(x - x_mean, replace = TRUE)))
t_boot
head(resamples)
hist(further_resamples)
library(e1071)
finch_data = read_csv("zebrafinches.csv")
further = finch_data$further
closer = finch_data$closer
diff = finch_data$diff
n = nrow(finch_data)
m0 = 0
set.seed(123)
R <- 10000
resamples <- tibble(t=rep(NA, R))
for(i in 1:R){
further_resample = sample(further,
size = n,
replace = T)
closer_resample = sample(closer,
size = n,
replace = T)
diff_resample = sample(diff),
resamples.null.farther = further_resamples$t - mean(further_resamples$t)
finch_data = read_csv("zebrafinches.csv")
further = finch_data$further
closer = finch_data$closer
diff = finch_data$diff
n = nrow(finch_data)
m0 = 0
set.seed(123)
R <- 10000
resamples <- tibble(t=rep(NA, R))
for(i in 1:R){
further_resample = sample(further,
size = n,
replace = T)
closer_resample = sample(closer,
size = n,
replace = T)
diff_resample = sample(diff),
resamples <- tibble(t=rep(NA, R))
for(i in 1:R){
further_resample = sample(further,
size = n,
replace = T)
closer_resample = sample(closer,
size = n,
replace = T)
diff_resample = sample(diff,
size = n,
replace = T)
further_resamplest[i] <- mean(further_resample)/(sd(further)/sqrt(n))
closer_resamplest[i] = mean(closer_resample)/(sd(closer)/sqrt(n))
diff_resamplest[i] = mean(diff_resample)/(sd(diff)/sqrt(n))
}
diff_resamples[i] = mean(diff_resample)/(sd(diff)/sqrt(n))
for(i in 1:R){
further_resample = sample(further,
size = n,
replace = T)
closer_resample = sample(closer,
size = n,
replace = T)
diff_resample = sample(diff,
size = n,
replace = T)
further_resamples[i] <- mean(further_resample)/(sd(further)/sqrt(n))
closer_resamples[i] = mean(closer_resample)/(sd(closer)/sqrt(n))
diff_resamples[i] = mean(diff_resample)/(sd(diff)/sqrt(n))
}
resamples.null.farther = further_resamples$t - mean(further_resamples$t)
resamples.null.closer = close_resamples$t - mean(closer_resamples$t)
resamples.null.farther = further_resamples_t - mean(further_resamples_t)
resamples.null.closer = close_resamples_t - mean(closer_resamples_t)
resamples.null.diff = diff_resamples_t - mean(diff_resamples_t)
further_resamples_t[i] <- mean(further_resample)/(sd(further)/sqrt(n))
closer_resamples_t[i] = mean(closer_resample)/(sd(closer)/sqrt(n))
diff_resamples_t[i] = mean(diff_resample)/(sd(diff)/sqrt(n))
for(i in 1:R){
further_resample = sample(further,
size = n,
replace = T)
closer_resample = sample(closer,
size = n,
replace = T)
diff_resample = sample(diff,
size = n,
replace = T)
further_resamples_t[i] <- mean(further_resample)/(sd(further)/sqrt(n))
closer_resamples_t[i] = mean(closer_resample)/(sd(closer)/sqrt(n))
diff_resamples_t[i] = mean(diff_resample)/(sd(diff)/sqrt(n))
}
resamples.null.farther = further_resamples_t - mean(further_resamples_t)
View(further_resample)
resamples.null.diff = diff_resamples$t.stat - mean(diff_resamples$t.stat)
finch_data = read_csv("zebrafinches.csv")
further = finch_data$further
closer = finch_data$closer
diff = finch_data$diff
n = nrow(finch_data)
m0 = 0
set.seed(123)
R <- 10000
resamples <- tibble(t=rep(NA, R))
for(i in 1:R){
further_resample = sample(further,
size = n,
replace = T)
closer_resample = sample(closer,
size = n,
replace = T)
diff_resample = sample(diff,
size = n,
replace = T)
further_resamples$t.stat[i] <- mean(further_resample)/(sd(further)/sqrt(n))
closer_resamples$t.stat[i] = mean(closer_resample)/(sd(closer)/sqrt(n))
diff_resamples$t.stat[i] = mean(diff_resample)/(sd(diff)/sqrt(n))
}
View(further_resample)
closer = finch_data$closer
diff = finch_data$diff
n = nrow(finch_data)
m0 = 0
set.seed(123)
R <- 10000
resamples <- tibble(t=rep(NA, R))
for(i in 1:R){
further_resample = sample(further,
size = n,
replace = T)
closer_resample = sample(closer,
size = n,
replace = T)
diff_resample = sample(diff,
size = n,
replace = T)
further_resamples$t.stat[i] <- mean(further_resample)/(sd(further)/sqrt(n))
closer_resamples$t.stat[i] = mean(closer_resample)/(sd(closer)/sqrt(n))
diff_resamples$t.stat[i] = mean(diff_resample)/(sd(diff)/sqrt(n))
}
View(further_resamples)
View(further_resample)
resamples <- tibble(t=rep(NA, R))
for(i in 1:R){
new_further_resample = sample(further,
size = n,
replace = T)
new_closer_resample = sample(closer,
size = n,
replace = T)
new_diff_resample = sample(diff,
size = n,
replace = T)
further_resamples$t.stat[i] <- mean(new_further_resample)/(sd(further)/sqrt(n))
closer_resamples$t.stat[i] = mean(new_closer_resample)/(sd(closer)/sqrt(n))
diff_resamples$t.stat[i] = mean(new_diff_resample)/(sd(diff)/sqrt(n))
}
View(further_resample)
diff_resamples = tibble(t=rep(NA, R))
for(i in 1:R){
new_further_resample = sample(further,
size = n,
replace = T)
new_closer_resample = sample(closer,
size = n,
replace = T)
new_diff_resample = sample(diff,
size = n,
replace = T)
further_resamples$t.stat[i] <- mean(new_further_resample)/(sd(further)/sqrt(n))
closer_resamples$t.stat[i] = mean(new_closer_resample)/(sd(closer)/sqrt(n))
diff_resamples$t.stat[i] = mean(new_diff_resample)/(sd(diff)/sqrt(n))
}
View(further_resample)
finch_data = read_csv("zebrafinches.csv")
further = finch_data$further
closer = finch_data$closer
diff = finch_data$diff
n = nrow(finch_data)
m0 = 0
set.seed(123)
R <- 10000
further_resamples <- tibble(t=rep(NA, R))
closer_resamples = tibble(t=rep(NA, R))
diff_resamples = tibble(t=rep(NA, R))
for(i in 1:R){
new_further_resample = sample(further,
size = n,
replace = T)
new_closer_resample = sample(closer,
size = n,
replace = T)
new_diff_resample = sample(diff,
size = n,
replace = T)
further_resamples$t.stats[i] <- mean(new_further_resample)/(sd(further)/sqrt(n))
closer_resamples$t.stats[i] = mean(new_closer_resample)/(sd(closer)/sqrt(n))
diff_resamples$t.stats[i] = mean(new_diff_resample)/(sd(diff)/sqrt(n))
}
View(further_resamples)
resamples.null.farther = further_resamples$t.stats - mean(further_resamples$t.stats)
resamples.null.closer = close_resamples$t.stats - mean(closer_resamples$t.stats)
further_resamples <- tibble(t=rep(NA, R))
closer_resamples = tibble(t=rep(NA, R))
diff_resamples = tibble(t=rep(NA, R))
for(i in 1:R){
new_further_resample = sample(further,
size = n,
replace = T)
new_closer_resample = sample(closer,
size = n,
replace = T)
new_diff_resample = sample(diff,
size = n,
replace = T)
further_resamples$t.stats[i] <- mean(new_further_resample)/(sd(further)/sqrt(n))
closer_resamples$t.stats[i] = mean(new_closer_resample)/(sd(closer)/sqrt(n))
diff_resamples$t.stats[i] = mean(new_diff_resample)/(sd(diff)/sqrt(n))
}
View(further_resamples)
resamples.null.farther = further_resamples$t.stats - mean(further_resamples$t.stats)
resamples.null.closer = closer_resamples$t.stats - mean(closer_resamples$t.stats)
resamples.null.diff = diff_resamples$t.stats - mean(diff_resamples$t.stats)
diff_resamples = tibble(t.stats=rep(NA, R))
for(i in 1:R){
new_further_resample = sample(further,
size = n,
replace = T)
new_closer_resample = sample(closer,
size = n,
replace = T)
new_diff_resample = sample(diff,
size = n,
replace = T)
further_resamples$t.stats[i] <- mean(new_further_resample)/(sd(further)/sqrt(n))
closer_resamples$t.stats[i] = mean(new_closer_resample)/(sd(closer)/sqrt(n))
diff_resamples$t.stats[i] = mean(new_diff_resample)/(sd(diff)/sqrt(n))
}
View(further_resamples)
resamples.null.farther = further_resamples$t.stats - mean(further_resamples$t.stats)
resamples.null.closer = closer_resamples$t.stats - mean(closer_resamples$t.stats)
resamples.null.diff = diff_resamples$t.stats - mean(diff_resamples$t.stats)
further_resamples <- tibble(t.stats=rep(NA, R))
closer_resamples = tibble(t.stats=rep(NA, R))
diff_resamples = tibble(t.stats=rep(NA, R))
for(i in 1:R){
new_further_resample = sample(further,
size = n,
replace = T)
new_closer_resample = sample(closer,
size = n,
replace = T)
new_diff_resample = sample(diff,
size = n,
replace = T)
further_resamples$t.stats[i] <- mean(new_further_resample)/(sd(further)/sqrt(n))
closer_resamples$t.stats[i] = mean(new_closer_resample)/(sd(closer)/sqrt(n))
diff_resamples$t.stats[i] = mean(new_diff_resample)/(sd(diff)/sqrt(n))
}
View(further_resamples)
resamples.null.farther = further_resamples$t.stats - mean(further_resamples$t.stats)
resamples.null.closer = closer_resamples$t.stats - mean(closer_resamples$t.stats)
resamples.null.diff = diff_resamples$t.stats - mean(diff_resamples$t.stats)
hist(resamples.null.farther)
hist(further_resamples)
hist(further_resamples$t.stats)
mean(resamples.null.farther <= further_resamples$t.stats)
mean(resamples.null.farther <= mean(further_resamples$t.stats))
pval_closer = mean(resamples.null.closer <= mean(closer_resamples$t.stats))
(pval_closer = mean(resamples.null.closer <= mean(closer_resamples$t.stats)))
(pval_closer = mean(resamples.null.closer >= mean(closer_resamples$t.stats)))
(pval_diff = mean(resamples.null.diff != mean(diff_resamples$t.stats)))
(pval_diff = mean(resamples.null.diff = mean(diff_resamples$t.stats)))
(pval_diff = mean(resamples.null.diff <= mean(diff_resamples$t.stats)))
(pval_diff = mean(resamples.null.diff >= mean(diff_resamples$t.stats)))
hist(resamples.null.diff)
hist(diff_resamples)
hist(diff_resamples$t.stats)
(pval_diff = mean(resamples.null.diff >= mean(diff)/(sd(diff)/sqrt(n))))
